@base <http://www.w3.org/ns/odrl/2/> .
@prefix :               <http://www.w3.org/ns/odrl/2/> .
@prefix odrl:           <http://www.w3.org/ns/odrl/2/> .
@prefix cc:             <http://creativecommons.org/ns#> .
@prefix dct:            <http://purl.org/dc/terms/> .
@prefix odrl:           <http://www.w3.org/ns/odrl/2/> .
@prefix owl:            <http://www.w3.org/2002/07/owl#> .
@prefix rdf:            <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:           <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema:         <http://schema.org/> .
@prefix skos:           <http://www.w3.org/2004/02/skos/core#> .
@prefix xsd:            <http://www.w3.org/2001/XMLSchema#> .
## ^
## ^
## ^
## TODO: check, what is necessary!!!

@prefix profile:        <https://www.nicos-rd.com/fua/odrl/profile/dacl/> .
@prefix dacl:           <https://www.nicos-rd.com/fua/odrl/profile/dacl/extension/0-0-1/> .

profile:
    a               owl:Ontology ;
    rdfs:label      "ODRL Profile 'dacl'"@en ;
    rdfs:label      "ODRL Profil 'dacl'"@de ;
    owl:versionInfo "0.0.1" ;
    dct:creator     "JÃ¶rg Langkau" ;
#    dct:contributor "" ;
    dct:description """"The ODRL Profile 'dacl'"."""@en ;
    dct:license     <http://creativecommons.org/licenses/by/4.0/> ;
.

#<https://www.nicos-rd.com/fua/odrl/profile/ftime/extension/0-0-1/>
dacl:
    a              skos:Collection ;
    skos:prefLabel "ODRL Profile 'dacl' Vocabulary"@en ;
    skos:scopeNote "All terms of the ODRL Profile 'dacl'"@en ;
    ## region member
    ##
    ##
    ## region member :: odrl
    ## region member :: odrl :: action
    ## REM: all members below (member :: odrl) are from the ODRL Common Vocabulary, a specification exists
    skos:member    :use ; ## action
    ## endregion member :: odrl :: action
    ## endregion member :: odrl
    ##
    ##
    ## region member :: extension
    ## region member :: extension :: policy
    skos:member    dacl:Access ;
    ## region member :: extension :: policy :: property
    skos:member    dacl:allow ;
    ## endregion member :: extension :: policy :: property
    ## endregion member :: extension :: policy
    ## region member :: extension :: rule
    skos:member    dacl:Allow ;
#    skos:member    dacl:deny ;
    ## endregion member :: extension :: rule
    ## region member :: extension :: leftOperand
    skos:member    dacl:method ;
    ## endregion member :: extension :: leftOperand
    ## region member :: extension :: action
    #    skos:member    ;
    ## endregion member :: extension :: action
    ## endregion member :: extension
    ## endregion member
.

## region extension
dacl:Access
    a                rdfs:Class, owl:Class, skos:Concept ;
    rdfs:subClassOf  :Offer ;
    ## TBC: owl:disjointWith :Agreement ;
    rdfs:label       "Zugriff"@en ;
    rdfs:label       "Access"@en ;
    skos:definition  """."""@en ;
    skos:note        "" ;
    skos:scopeNote   "Non-Normative"@en ;
    rdfs:isDefinedBy profile: ;
.

dacl:allow
    a                  rdf:Property, owl:ObjectProperty, skos:Concept ;
    rdfs:subPropertyOf :permission ;
    rdfs:label         "Has Allow"@en ;
#    skos:definition  "."@en ;
    rdfs:domain        dacl:Access ;
    rdfs:range         dacl:Allow ;
    rdfs:isDefinedBy   profile: ;
.

## region extension :: rule

dacl:Allow
    a                rdfs:Class, owl:Class, skos:Concept ;
    rdfs:subClassOf  :Permission ;
    owl:disjointWith :Prohibition, :Duty ;
    rdfs:label       "Allow"@en ;
    rdfs:label       "Erlaubnis"@en ;
    skos:definition  """."""@en ;
    skos:note        "" ;
    skos:scopeNote   "Non-Normative"@en ;
    rdfs:isDefinedBy profile: ;
.

## endregion extension :: rule

## region extension :: leftOperand
dacl:method
    a                :LeftOperand, owl:NamedIndividual, skos:Concept ;
    rdfs:label       "Method"@en ;
    rdfs:label       "Methode"@en ;
    skos:definition  """."""@en ;
    skos:note        "" ;
    skos:scopeNote   "Non-Normative"@en ;
    rdfs:isDefinedBy profile: ;
.

## endregion extension :: leftOperand

## region extension :: action

#dacl:
#    a                :Operator, owl:NamedIndividual, skos:Concept ;
#    rdfs:label       ""@en ;
#    skos:definition  """."""@en ;
#    rdfs:isDefinedBy profile: ;
#.

## endregion extension :: action
## endregion extension

## region
dacl:Method
    a                owl:Class ;
    rdfs:isDefinedBy profile: ;
.

dacl:CREATE
    a                dacl:Method ;
    owl:sameAs       dacl:PUT ;
    rdfs:isDefinedBy profile: ;
.

dacl:PUT
    a                dacl:Method ;
    owl:sameAs       dacl:CREATE ;
    rdfs:isDefinedBy profile: ;
.

dacl:READ
    a                dacl:Method ;
    owl:sameAs       dacl:GET ;
    rdfs:isDefinedBy profile: ;
.

dacl:GET
    a                dacl:Method ;
    owl:sameAs       dacl:READ ;
    rdfs:isDefinedBy profile: ;
.

dacl:WRITE
    a                dacl:Method ;
    owl:sameAs       dacl:UPDATE ;
    owl:sameAs       dacl:MODIFY ;
    rdfs:isDefinedBy profile: ;
.

dacl:UPDATE
    a                dacl:Method ;
    owl:sameAs       dacl:WRITE ;
    owl:sameAs       dacl:MODIFY ;
    rdfs:isDefinedBy profile: ;
.

dacl:MODIFY
    a                dacl:Method ;
    owl:sameAs       dacl:WRITE ;
    owl:sameAs       dacl:UPDATE ;
    rdfs:isDefinedBy profile: ;
.

dacl:DELETE
    a                dacl:Method ;
    owl:sameAs       dacl:REMOVE ;
    rdfs:isDefinedBy profile: ;
.

dacl:REMOVE
    a                dacl:Method ;
    owl:sameAs       dacl:DELETE ;
    rdfs:isDefinedBy profile: ;
.

## endregion

## region individual

dacl:THERULE
    a                dacl:Allow ;
    :target          [ a           :AssetCollection ;
#                       :source     <> ; ## REM: send a acl-list
                       :source     [ ] ;
                       :refinement [ a         odrl:LogicalConstraint ;
                                     odrl:xone [ a        odrl:LogicalConstraint ;
                                                 odrl:and [ a       odrl:LogicalConstraint ;
                                                            odrl:or [ a             odrl:Constraint ;
                                                                      :leftOperand  dacl:method ;
                                                                      :operator     :eq ;
                                                                      :rightOperand dacl:CREATE ; ] ;
                                                            odrl:or [ a             odrl:Constraint ;
                                                                      :leftOperand  dacl:method ;
                                                                      :operator     :eq ;
                                                                      :rightOperand dacl:PUT ; ] ; ] ; ] ;
                                     odrl:xone [ a        odrl:LogicalConstraint ;
                                                 odrl:and [ a       odrl:LogicalConstraint ;
                                                            odrl:or [ a             odrl:Constraint ;
                                                                      :leftOperand  dacl:method ;
                                                                      :operator     :eq ;
                                                                      :rightOperand dacl:READ ; ] ;
                                                            odrl:or [ a             odrl:Constraint ;
                                                                      :leftOperand  dacl:method ;
                                                                      :operator     :eq ;
                                                                      :rightOperand dacl:GET ; ] ; ] ; ] ;
                                     odrl:xone [ a        odrl:LogicalConstraint ;
                                                 odrl:and [ a       odrl:LogicalConstraint ;
                                                            odrl:or [ a             odrl:Constraint ;
                                                                      :leftOperand  dacl:method ;
                                                                      :operator     :eq ;
                                                                      :rightOperand dacl:UPDATE ; ] ;
                                                            odrl:or [ a             odrl:Constraint ;
                                                                      :leftOperand  dacl:method ;
                                                                      :operator     :eq ;
                                                                      :rightOperand dacl:WRITE ; ] ;
                                                            odrl:or [ a             odrl:Constraint ;
                                                                      :leftOperand  dacl:method ;
                                                                      :operator     :eq ;
                                                                      :rightOperand dacl:MODIFY ; ] ; ] ; ] ;
                                     odrl:xone [ a        odrl:LogicalConstraint ;
                                                 odrl:and [ a       odrl:LogicalConstraint ;
                                                            odrl:or [ a             odrl:Constraint ;
                                                                      :leftOperand  dacl:method ;
                                                                      :operator     :eq ;
                                                                      :rightOperand dacl:DELETE ; ] ;
                                                            odrl:or [ a             odrl:Constraint ;
                                                                      :leftOperand  dacl:method ;
                                                                      :operator     :eq ;
                                                                      :rightOperand dacl:REMOVE ; ] ; ] ; ] ; ] ; ] ;
#    odrl:constraint   [] ;
    odrl:action      :use ;
    rdfs:isDefinedBy profile: ;
.

## endregion individual

## EOF fua.dacl.ttl